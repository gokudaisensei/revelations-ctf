
 ██████╗ ██████╗ ██████╗ ███████╗ ██████╗ ██╗   ██╗███████╗███████╗████████╗
██╔════╝██╔═══██╗██╔══██╗██╔════╝██╔═══██╗██║   ██║██╔════╝██╔════╝╚══██╔══╝
██║     ██║   ██║██║  ██║█████╗  ██║   ██║██║   ██║█████╗  ███████╗   ██║   
██║     ██║   ██║██║  ██║██╔══╝  ██║▄▄ ██║██║   ██║██╔══╝  ╚════██║   ██║   
╚██████╗╚██████╔╝██████╔╝███████╗╚██████╔╝╚██████╔╝███████╗███████║   ██║   
 ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝ ╚══▀▀═╝  ╚═════╝ ╚══════╝╚══════╝   ╚═╝   
                                                                            

===============================================
         Welcome to CODE QUEST!
===============================================

Rules:
  1. Do not share flags with others.
  2. Teams must consist of 2 players.
  3. Use only the provided tools and hints.
  4. Follow the challenge guidelines strictly.
  5. Most importantly, have fun and think creatively!

-----------------------------------------------
Current Challenge: Strings of Sausage (Reverse Engineering)
Category: Reverse Engineering
Difficulty: Easy

Description:
Tom has hidden a glorious sausage in a binary file – a cheeky nod to his culinary misadventures.
Although the binary is partially obfuscated, it contains constant strings that hint at a secret flag.
Your mission is to extract these strings using basic reverse engineering techniques.

Challenge File:
- hide_a_sausage (A binary that conceals its secret among obfuscated string sequences)

Good luck, and happy reversing!
===============================================



