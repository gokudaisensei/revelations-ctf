
 ██████╗ ██████╗ ██████╗ ███████╗ ██████╗ ██╗   ██╗███████╗███████╗████████╗
██╔════╝██╔═══██╗██╔══██╗██╔════╝██╔═══██╗██║   ██║██╔════╝██╔════╝╚══██╔══╝
██║     ██║   ██║██║  ██║█████╗  ██║   ██║██║   ██║█████╗  ███████╗   ██║   
██║     ██║   ██║██║  ██║██╔══╝  ██║▄▄ ██║██║   ██║██╔══╝  ╚════██║   ██║   
╚██████╗╚██████╔╝██████╔╝███████╗╚██████╔╝╚██████╔╝███████╗███████║   ██║   
 ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝ ╚══▀▀═╝  ╚═════╝ ╚══════╝╚══════╝   ╚═╝   
                                                                            

===============================================
         Welcome to CODE QUEST!
===============================================

Rules:
  1. Do not share flags with others.
  2. Teams must consist of 2 players.
  3. Use only the provided tools and hints.
  4. Follow the challenge guidelines strictly.
  5. Most importantly, have fun and think creatively!

-----------------------------------------------
Current Challenge: Cracking Tom's Trap Code (Reverse Engineering)
Category: Reverse Engineering
Difficulty: Medium

Description:
Tom has set a cunning password within his mouse trap to catch Jerry.
However, his code isn’t well-documented, and the password is hidden in the binary.
Your mission is to analyze the program’s execution flow using debugging tools,
and determine the correct password to disable the trap once and for all.

Challenge File:
- mouse_trap_code (Tom's binary trap that requires the correct password to unlock)
===============================================



